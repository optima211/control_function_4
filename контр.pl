goal:-retractall(маршрут/3),dynamic(маршрут/3),repeat,writeln(''),
      writeln('1) Просмотр БД'),
      writeln('2) Добавить маршрут'),
      writeln('3) Удалить маршрут'),
      writeln('4) Найти маршруты без пересадок'),
      writeln('5) Сохранить БД и выйти'),
      writeln('6) Выйти без сохранения БД'),
      write('Выберите пункт меню : '),read(N),N<7,меню(N),N>4,!.
 
меню(1):-просмотр.
меню(2):-repeat,write('\nВведите тип транспорта: '),read(T),
         write('Введите номер маршрута: '),read(N),
         write('Введите список остановок: '),read(O),
         assert(маршрут(T,N,O)),продолжить,!.
меню(3):-repeat,write('\nВведите тип транспорта : '),read(T),
         write('Введите номер маршрута : '),read(N),удалить(T,N),
         продолжить,!.
меню(4):-write('Введите первую остановку пути: '),read(O1),
         write('Введите вторую остановку пути: '),read(O2),
         findall([[T,N]],(маршрут(T,N,O),member(O1,O),member(O2,O),вывод(T,N)),L),
         L=[],writeln('Пути без пересадок нет'),!.
меню(5):-tell('маршруты.db'),listing(маршрут),told,writeln('БД записана в файл'),!.
меню(6):-!.
 
вывод(T,N):-write('Тип транспорта "'),write(T),write('", маршрут '),writeln(N).

продолжить:- write('Продолжить? (н-Нет/д-Да) : '),read(X),ответ(X).

ответ(_):-fail.
ответ(д):-fail.
ответ(н).

удалить(T,N):-retract(маршрут(T,N,_)),writeln('Маршрут удалён'),!.
удалить(_,_):-writeln('Маршрут отсутствует в БД'),!.

просмотр:-findall([],маршрут(_,_,_),L),L=[],consult('маршруты.db').
просмотр:-writeln('Транспорт       Маршрут       Остановки'),fail.
просмотр:-маршрут(T,N,O),writef('%20L',[T]),writef('%3L     ',[N]),writeln(O).
